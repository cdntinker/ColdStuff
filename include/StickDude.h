#define DUDE_HEIGHT 12
#define DUDE_WIDTH 8

static const unsigned char PROGMEM StickDude_wave[][12] = {

    {
        B00000000, // .        .
        B00001000, // .    0   .
        B00011100, // .   000  .
        B00001000, // .    0   .
        B00001000, // .    0   .
        B00011100, // .   000  .
        B00101010, // .  0 0 0 .
        B01001001, // . 0  0  0.
        B00001000, // .    0   .
        B00010100, // .   0 0  .
        B00100010, // .  0   0 .
        B01000001  // . 0     0.
    },

    {
        B00000000, // .        .
        B00001000, // .    0   .
        B00011100, // .   000  .
        B00001000, // .    0   .
        B00001000, // .    0   .
        B00111110, // .  00000 .
        B01001001, // . 0  0  0.
        B00001000, // .    0   .
        B00001000, // .    0   .
        B00010100, // .   0 0  .
        B00100010, // .  0   0 .
        B01000001  // . 0     0.
    },

    {
        B00000000, // .        .
        B00001000, // .    0   .
        B00011100, // .   000  .
        B00001000, // .    0   .
        B00001000, // .    0   .
        B01111111, // . 0000000.
        B00001000, // .    0   .
        B00001000, // .    0   .
        B00001000, // .    0   .
        B00010100, // .   0 0  .
        B00100010, // .  0   0 .
        B01000001  // . 0     0.
    },

    {
        B00000000, // .        .
        B00001000, // .    0   .
        B00011100, // .   000  .
        B00001000, // .    0   .
        B01001001, // . 0  0  0.
        B00111110, // .  00000 .
        B00001000, // .    0   .
        B00001000, // .    0   .
        B00001000, // .    0   .
        B00010100, // .   0 0  .
        B00100010, // .  0   0 .
        B01000001  // . 0     0.
    },

    {
        B00000000, // .        .
        B00001000, // .    0   .
        B00011100, // .   000  .
        B01001001, // . 0  0  0.
        B00101010, // .  0 0 0 .
        B00011100, // .   000  .
        B00001000, // .    0   .
        B00001000, // .    0   .
        B00001000, // .    0   .
        B00010100, // .   0 0  .
        B00100010, // .  0   0 .
        B01000001  // . 0     0.
    },
};

int StickDude_wave_height = sizeof(StickDude_wave[0]);
int StickDude_wave_count = sizeof(StickDude_wave) / StickDude_wave_height;
int StickDude_wave_width = 8;

static const unsigned char PROGMEM StickDude_walk[][12] = {
    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001110, // ....000.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
    },             // A

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001110, // ....000.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....00..
        B00011000, // ...00...
        B00001000, // ....0...
    },             // B

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001110, // ....000.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....00..
        B00001010, // ....0.0.
        B00001100, // ....00..
        B00001000, // ....0...
    },             // C

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001110, // ....000.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....00..
        B00001010, // ....0.0.
        B00001010, // ....0.0.
        B00001000, // ....0...
    },             // D

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001110, // ....000.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....00..
        B00001010, // ....0.0.
        B00001001, // ....0..0
    },             // E

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001110, // ....000.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....00..
        B00010010, // ...0..0.
        B00010001, // ...0...0
    },             // F

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001110, // ....000.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00010100, // ...0.0..
        B00100010, // ..0...0.
        B01000001, // .0.....0
    },             // G

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001110, // ....000.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00011000, // ...00...
        B00100100, // ..0..0..
        B01000100, // .0...0..
    },             // H

};

int StickDude_walk_height = sizeof(StickDude_walk[0]);
int StickDude_walk_count = sizeof(StickDude_walk) / StickDude_walk_height;
int StickDude_walk_width = 8;

static const unsigned char PROGMEM StickDude_beer[][12] = {

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // A

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....00..
        B00001100, // ....00..
        B00001100, // ....00..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // B

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....00..
        B00001010, // ....0.0.
        B00001010, // ....0.0.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // C

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....00..
        B00001011, // ....0.00
        B00001001, // ....0..0
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // D

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001101, // ....00.0
        B00001011, // ....0.00
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // E

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001111, // ....0000
        B00001001, // ....0..0
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // F

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001000, // ....0...
        B00001001, // ....0..0
        B00001111, // ....0000
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // G

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001010, // ....0.0.
        B00001001, // ....0..0
        B00001110, // ....000.
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // H

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001001, // ....0..0
        B00001011, // ....0.00
        B00001100, // ....00..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // I

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001011, // ....0.00
        B00001010, // ....0.0.
        B00001100, // ....00..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // J

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001110, // ....000.
        B00001010, // ....0.0.
        B00001100, // ....00..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // K

    {
        B00000000, // ........
        B00001000, // ....0...
        B00011100, // ...000..
        B00001110, // ....00..
        B00001010, // ....0.0.
        B00001100, // ....00..
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001000, // ....0...
        B00001100, // ....01..
    },             // A

};

int StickDude_beer_height = sizeof(StickDude_beer[0]);
int StickDude_beer_count = sizeof(StickDude_beer) / StickDude_beer_height;
int StickDude_beer_width = 8;